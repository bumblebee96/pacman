


ARM Macro Assembler    Page 1 


    1 00000000         ; Print.s
    2 00000000         ; Student names: change this to your names or look very 
                       silly
    3 00000000         ; Last modification date: change this to the last modifi
                       cation date or look very silly
    4 00000000         ; Runs on LM4F120 or TM4C123
    5 00000000         ; EE319K lab 7 device driver for any LCD
    6 00000000         ;
    7 00000000         ; As part of Lab 7, students need to implement these LCD
                       _OutDec and LCD_OutFix
    8 00000000         ; This driver assumes two low-level LCD functions
    9 00000000         ; ST7735_OutChar   outputs a single 8-bit ASCII characte
                       r
   10 00000000         ; ST7735_OutString outputs a null-terminated string 
   11 00000000         
   12 00000000                 IMPORT           ST7735_OutChar
   13 00000000                 IMPORT           ST7735_OutString
   14 00000000                 EXPORT           LCD_OutDec
   15 00000000                 EXPORT           LCD_OutFix
   16 00000000         
   17 00000000 00000000 
                       dec1    EQU              0
   18 00000000 00000002 
                       dec2    EQU              2
   19 00000000 00000003 
                       dec3    EQU              3
   20 00000000 00000004 
                       dec4    EQU              4
   21 00000000         
   22 00000000         
   23 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   24 00000000                 THUMB
   25 00000000         
   26 00000000         
   27 00000000         
   28 00000000         ;-----------------------LCD_OutDec----------------------
                       -
   29 00000000         ; Output a 32-bit number in unsigned decimal format
   30 00000000         ; Input: R0 (call by value) 32-bit unsigned number
   31 00000000         ; Output: none
   32 00000000         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   33 00000000         LCD_OutDec
   34 00000000         
   35 00000000 E92D 48F0       PUSH             {R4,R5,R6,R7,R11,LR}
   36 00000004         
   37 00000004 280A            CMP              R0,#10      ;if R0<10 print out
                                                             ascii code
   38 00000006 D205            BHS              rec
   39 00000008         ;convert R0 to ascii value
   40 00000008 F04F 0130       MOV              R1,#0x30    ;ascii code for 0 c
                                                            haracter
   41 0000000C 4408            ADD              R0,R0,R1
   42 0000000E         
   43 0000000E F7FF FFFE       BL               ST7735_OutChar
   44 00000012         
   45 00000012 E013            B                done
   46 00000014         



ARM Macro Assembler    Page 2 


   47 00000014         rec                                  ;recursively call t
                                                            his function
   48 00000014         
   49 00000014 B403            PUSH{R0,R1}
   50 00000016 F04F 010A       MOV              R1,#10
   51 0000001A FBB0 F0F1       UDIV             R0,R1
   52 0000001E F7FF FFFE       BL               LCD_OutDec  ;call LCD_OutDec(R0
                                                            /10)
   53 00000022 BC03            POP{R0,R1}
   54 00000024         
   55 00000024 B403            PUSH{R0,R1}
   56 00000026         ;MOD  DIVISION
   57 00000026 F04F 010A       MOV              R1,#10
   58 0000002A FBB0 F2F1       UDIV             R2,R0,R1
   59 0000002E FB02 F201       MUL              R2,R2,R1
   60 00000032 EBA0 0002       SUB              R0,R0,R2
   61 00000036 F7FF FFFE       BL               LCD_OutDec  ;call LCD_OutDec(R0
                                                            %10)
   62 0000003A BC03            POP{R0,R1}
   63 0000003C         
   64 0000003C         done
   65 0000003C E8BD 48F0       POP              {R4,R5,R6,R7,R11,LR}
   66 00000040         
   67 00000040 4770            BX               LR
   68 00000042         ;* * * * * * * * End of LCD_OutDec * * * * * * * *
   69 00000042         
   70 00000042         ; -----------------------LCD _OutFix--------------------
                       --
   71 00000042         ; Output characters to LCD display in fixed-point format
                       
   72 00000042         ; unsigned decimal, resolution 0.001, range 0.000 to 9.9
                       99
   73 00000042         ; Inputs:  R0 is an unsigned 32-bit number
   74 00000042         ; Outputs: none
   75 00000042         ; E.g., R0=0,    then output "0.000 "
   76 00000042         ;       R0=3,    then output "0.003 "
   77 00000042         ;       R0=89,   then output "0.089 "
   78 00000042         ;       R0=123,  then output "0.123 "
   79 00000042         ;       R0=9999, then output "9.999 "
   80 00000042         ;       R0>9999, then output "*.*** "
   81 00000042         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   82 00000042         LCD_OutFix
   83 00000042         
   84 00000042 E92D 48F0       PUSH             {R4,R5,R6,R7,R11,LR}
   85 00000046         
   86 00000046 B082            SUB              SP,SP,#8    ;allocate memory fo
                                                            r  the char  string
                                                            
   87 00000048 46EB            MOV              R11,SP      ;set stack frame po
                                                            inter
   88 0000004A         
   89 0000004A F04F 012A       MOV              R1,#0x2A    ;initialize memory
   90 0000004E F88B 1000       STRB             R1,[R11]
   91 00000052 F04F 012E       MOV              R1,#0x2E
   92 00000056 F88D 1001       STRB             R1,[SP,#1]
   93 0000005A F04F 012A       MOV              R1,#0x2A
   94 0000005E F88B 1002       STRB             R1,[R11,#2]
   95 00000062 F88B 1003       STRB             R1,[R11,#3]



ARM Macro Assembler    Page 3 


   96 00000066 F88B 1004       STRB             R1,[R11,#4]
   97 0000006A F04F 0120       MOV              R1,#0x20
   98 0000006E F88B 1005       STRB             R1,[R11,#5]
   99 00000072 F04F 0100       MOV              R1,#0x00
  100 00000076 F88B 1006       STRB             R1,[R11,#6]
  101 0000007A         
  102 0000007A F242 710F       MOV              R1,#9999    ;test if our input 
                                                            is valid
  103 0000007E 4288            CMP              R0,R1
  104 00000080 D903            BLS              valid
  105 00000082         
  106 00000082 4658            MOV              R0,R11      ;if input is greate
                                                            r than 9999 output 
                                                            "*.*** "
  107 00000084 F7FF FFFE       BL               ST7735_OutString
  108 00000088 E033            B                done2
  109 0000008A         
  110 0000008A         valid
  111 0000008A F04F 0130       MOV              R1,#0x30    ;ascii for '0'
  112 0000008E F44F 727A       MOV              R2,#1000
  113 00000092 FBB0 F3F2       UDIV             R3,R0,R2
  114 00000096 440B            ADD              R3,R3,R1
  115 00000098 F88B 3000       STRB             R3,[R11,#dec1] ;store the first
                                                             digit
  116 0000009C         
  117 0000009C FBB0 F3F2       UDIV             R3,R0,R2
  118 000000A0 FB03 F302       MUL              R3,R3,R2
  119 000000A4 EBA0 0703       SUB              R7,R0,R3    ;R7 = R0%1000
  120 000000A8 F04F 0264       MOV              R2,#100
  121 000000AC FBB7 F3F2       UDIV             R3,R7,R2
  122 000000B0 440B            ADD              R3,R3,R1
  123 000000B2 F88B 3002       STRB             R3,[R11,#dec2] 
                                                            ;store second digit
                                                            
  124 000000B6         
  125 000000B6 F04F 0264       MOV              R2,#100
  126 000000BA FBB7 F3F2       UDIV             R3,R7,R2
  127 000000BE FB03 F302       MUL              R3,R3,R2
  128 000000C2 EBA7 0603       SUB              R6,R7,R3    ;R6 = R7%100
  129 000000C6 F04F 020A       MOV              R2,#10
  130 000000CA FBB6 F3F2       UDIV             R3,R6,R2
  131 000000CE 440B            ADD              R3,R3,R1
  132 000000D0 F88B 3003       STRB             R3,[R11,#dec3]
  133 000000D4         
  134 000000D4 F04F 020A       MOV              R2,#10
  135 000000D8 FBB6 F3F2       UDIV             R3,R6,R2
  136 000000DC FB03 F302       MUL              R3,R3,R2
  137 000000E0 EBA6 0503       SUB              R5,R6,R3    ;R5 = R6%10
  138 000000E4 EB05 0301       ADD              R3,R5,R1
  139 000000E8 F88B 3004       STRB             R3,[R11,#dec4]
  140 000000EC         
  141 000000EC 4658            MOV              R0,R11
  142 000000EE F7FF FFFE       BL               ST7735_OutString
  143 000000F2         
  144 000000F2         done2
  145 000000F2 B002            ADD              SP,SP,#8    ;dealocate locals 
  146 000000F4 E8BD 48F0       POP              {R4,R5,R6,R7,R11,LR}
  147 000000F8         
  148 000000F8 4770            BX               LR



ARM Macro Assembler    Page 4 


  149 000000FA         
  150 000000FA 00 00           ALIGN
  151 000000FC         ;* * * * * * * * End of LCD_OutFix * * * * * * * *
  152 000000FC         
  153 000000FC                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  154 000000FC                 END                          ; end of file
Command Line: --debug --xref --cpu=Cortex-M4 --apcs=interwork --depend=.\print.
d -o.\print.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\
Inc\Luminary --list=.\print.lst Print.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 23 in file Print.s
   Uses
      None
Comment: .text unused
LCD_OutDec 00000000

Symbol: LCD_OutDec
   Definitions
      At line 33 in file Print.s
   Uses
      At line 14 in file Print.s
      At line 52 in file Print.s
      At line 61 in file Print.s

LCD_OutFix 00000042

Symbol: LCD_OutFix
   Definitions
      At line 82 in file Print.s
   Uses
      At line 15 in file Print.s
Comment: LCD_OutFix used once
done 0000003C

Symbol: done
   Definitions
      At line 64 in file Print.s
   Uses
      At line 45 in file Print.s
Comment: done used once
done2 000000F2

Symbol: done2
   Definitions
      At line 144 in file Print.s
   Uses
      At line 108 in file Print.s
Comment: done2 used once
rec 00000014

Symbol: rec
   Definitions
      At line 47 in file Print.s
   Uses
      At line 38 in file Print.s
Comment: rec used once
valid 0000008A

Symbol: valid
   Definitions
      At line 110 in file Print.s
   Uses
      At line 104 in file Print.s
Comment: valid used once
7 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

dec1 00000000

Symbol: dec1
   Definitions
      At line 17 in file Print.s
   Uses
      At line 115 in file Print.s
Comment: dec1 used once
dec2 00000002

Symbol: dec2
   Definitions
      At line 18 in file Print.s
   Uses
      At line 123 in file Print.s
Comment: dec2 used once
dec3 00000003

Symbol: dec3
   Definitions
      At line 19 in file Print.s
   Uses
      At line 132 in file Print.s
Comment: dec3 used once
dec4 00000004

Symbol: dec4
   Definitions
      At line 20 in file Print.s
   Uses
      At line 139 in file Print.s
Comment: dec4 used once
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

ST7735_OutChar 00000000

Symbol: ST7735_OutChar
   Definitions
      At line 12 in file Print.s
   Uses
      At line 43 in file Print.s
Comment: ST7735_OutChar used once
ST7735_OutString 00000000

Symbol: ST7735_OutString
   Definitions
      At line 13 in file Print.s
   Uses
      At line 107 in file Print.s
      At line 142 in file Print.s

2 symbols
343 symbols in table
