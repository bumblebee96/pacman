


ARM Macro Assembler    Page 1 


    1 00000000         ; LCD.s
    2 00000000         ; Student names: change this to your names or look very 
                       silly
    3 00000000         ; Last modification date: change this to the last modifi
                       cation date or look very silly
    4 00000000         
    5 00000000         ; Runs on LM4F120/TM4C123
    6 00000000         ; Use SSI0 to send an 8-bit code to the ST7735 160x128 p
                       ixel LCD.
    7 00000000         
    8 00000000         ; As part of Lab 7, students need to implement these LCD
                       _WriteCommand and LCD_WriteData
    9 00000000         ; This driver assumes two low-level LCD functions
   10 00000000         
   11 00000000         ; Backlight (pin 10) connected to +3.3 V
   12 00000000         ; MISO (pin 9) unconnected
   13 00000000         ; SCK (pin 8) connected to PA2 (SSI0Clk)
   14 00000000         ; MOSI (pin 7) connected to PA5 (SSI0Tx)
   15 00000000         ; TFT_CS (pin 6) connected to PA3 (SSI0Fss)
   16 00000000         ; CARD_CS (pin 5) unconnected
   17 00000000         ; Data/Command (pin 4) connected to PA6 (GPIO)
   18 00000000         ; RESET (pin 3) connected to PA7 (GPIO)
   19 00000000         ; VCC (pin 2) connected to +3.3 V
   20 00000000         ; Gnd (pin 1) connected to ground
   21 00000000         
   22 00000000 400043FC 
                       GPIO_PORTA_DATA_R
                               EQU              0x400043FC
   23 00000000 40008008 
                       SSI0_DR_R
                               EQU              0x40008008
   24 00000000 4000800C 
                       SSI0_SR_R
                               EQU              0x4000800C
   25 00000000 00000004 
                       SSI_SR_RNE
                               EQU              0x00000004  ; SSI Receive FIFO 
                                                            Not Empty
   26 00000000 00000010 
                       SSI_SR_BSY
                               EQU              0x00000010  ; SSI Busy Bit
   27 00000000 00000002 
                       SSI_SR_TNF
                               EQU              0x00000002  ; SSI Transmit FIFO
                                                             Not Full
   28 00000000         
   29 00000000                 EXPORT           writecommand
   30 00000000                 EXPORT           writedata
   31 00000000         
   32 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   33 00000000                 THUMB
   34 00000000                 ALIGN
   35 00000000         
   36 00000000         ; The Data/Command pin must be valid when the eighth bit
                        is
   37 00000000         ; sent.  The SSI module has hardware input and output FI
                       FOs
   38 00000000         ; that are 8 locations deep.  Based on the observation t



ARM Macro Assembler    Page 2 


                       hat
   39 00000000         ; the LCD interface tends to send a few commands and the
                       n a
   40 00000000         ; lot of data, the FIFOs are not used when writing
   41 00000000         ; commands, and they are used when writing data.  This
   42 00000000         ; ensures that the Data/Command pin status matches the b
                       yte
   43 00000000         ; that is actually being transmitted.
   44 00000000         ; The write command operation waits until all data has b
                       een
   45 00000000         ; sent, configures the Data/Command pin for commands, se
                       nds
   46 00000000         ; the command, and then waits for the transmission to
   47 00000000         ; finish.
   48 00000000         ; The write data operation waits until there is room in 
                       the
   49 00000000         ; transmit FIFO, configures the Data/Command pin for dat
                       a,
   50 00000000         ; and then adds the data to the transmit FIFO.
   51 00000000         ; NOTE: These functions will crash or stall indefinitely
                        if
   52 00000000         ; the SSI0 module is not initialized and enabled.
   53 00000000         
   54 00000000         ; This is a helper function that sends an 8-bit command 
                       to the LCD.
   55 00000000         ; Input: R0  8-bit command to transmit
   56 00000000         ; Output: none
   57 00000000         ; Assumes: SSI0 and port A have already been initialized
                        and enabled
   58 00000000         writecommand
   59 00000000         ;1) Read SSI0_SR_R and check bit 4, 
   60 00000000         ;2) If bit 4 is high, loop back to step 1 (wait for BUSY
                        bit to be low)
   61 00000000         ;3) Clear D/C=PA6 to zero
   62 00000000         ;4) Write the command to SSI0_DR_R
   63 00000000         ;5) Read SSI0_SR_R and check bit 4, 
   64 00000000         ;6) If bit 4 is high, loop back to step 5 (wait for BUSY
                        bit to be low)
   65 00000000         
   66 00000000         busyC
   67 00000000 4915            LDR              R1,=SSI0_SR_R
   68 00000002 6809            LDR              R1,[R1]
   69 00000004 F04F 0210       MOV              R2,#0x10
   70 00000008 EA12 0301       ANDS             R3,R2,R1
   71 0000000C D1F8            BNE              busyC
   72 0000000E         
   73 0000000E 4913            LDR              R1,=GPIO_PORTA_DATA_R
   74 00000010 6809            LDR              R1,[R1]
   75 00000012 F04F 02BF       MOV              R2,#0xBF
   76 00000016 EA01 0102       AND              R1,R1,R2    ;clear D/C
   77 0000001A 4A10            LDR              R2,=GPIO_PORTA_DATA_R
   78 0000001C 6011            STR              R1,[R2]
   79 0000001E         
   80 0000001E 4910            LDR              R1,=SSI0_DR_R 
                                                            ;store the command
   81 00000020 6008            STR              R0,[R1]
   82 00000022         
   83 00000022         busyC2
   84 00000022 490D            LDR              R1,=SSI0_SR_R



ARM Macro Assembler    Page 3 


   85 00000024 6809            LDR              R1,[R1]
   86 00000026 F04F 0210       MOV              R2,#0x10
   87 0000002A EA12 0301       ANDS             R3,R2,R1
   88 0000002E D1F8            BNE              busyC2
   89 00000030         
   90 00000030         
   91 00000030 4770            BX               LR
   92 00000032         
   93 00000032         ; This is a helper function that sends an 8-bit data to 
                       the LCD.
   94 00000032         ; Input: R0  8-bit data to transmit
   95 00000032         ; Output: none
   96 00000032         ; Assumes: SSI0 and port A have already been initialized
                        and enabled
   97 00000032         writedata
   98 00000032         ;1) Read SSI0_SR_R and check bit 1, 
   99 00000032         ;2) If bit 1 is low loop back to step 1 (wait for TNF bi
                       t to be high)
  100 00000032         ;3) Set D/C=PA6 to one
  101 00000032         ;4) Write the 8-bit data to SSI0_DR_R
  102 00000032         
  103 00000032         busyD
  104 00000032 4909            LDR              R1,=SSI0_SR_R
  105 00000034 6809            LDR              R1,[R1]
  106 00000036 F04F 0202       MOV              R2,#0x02
  107 0000003A EA12 0301       ANDS             R3,R2,R1
  108 0000003E D0F8            BEQ              busyD
  109 00000040         
  110 00000040 4906            LDR              R1,=GPIO_PORTA_DATA_R
  111 00000042 6809            LDR              R1,[R1]
  112 00000044 F04F 0240       MOV              R2,#0x40
  113 00000048 EA41 0102       ORR              R1,R1,R2    ;set D/C
  114 0000004C 4A03            LDR              R2,=GPIO_PORTA_DATA_R
  115 0000004E 6011            STR              R1,[R2]
  116 00000050         
  117 00000050 4903            LDR              R1,=SSI0_DR_R
  118 00000052 6008            STR              R0,[R1]
  119 00000054         
  120 00000054         
  121 00000054 4770            BX               LR
  122 00000056         
  123 00000056         
  124 00000056         ;***************************************************
  125 00000056         ; This is a library for the Adafruit 1.8" SPI display.
  126 00000056         ; This library works with the Adafruit 1.8" TFT Breakout
                        w/SD card
  127 00000056         ; ----> http://www.adafruit.com/products/358
  128 00000056         ; as well as Adafruit raw 1.8" TFT display
  129 00000056         ; ----> http://www.adafruit.com/products/618
  130 00000056         ;
  131 00000056         ; Check out the links above for our tutorials and wiring
                        diagrams
  132 00000056         ; These displays use SPI to communicate, 4 or 5 pins are
                        required to
  133 00000056         ; interface (RST is optional)
  134 00000056         ; Adafruit invests time and resources providing this ope
                       n source code,
  135 00000056         ; please support Adafruit and open-source hardware by pu
                       rchasing



ARM Macro Assembler    Page 4 


  136 00000056         ; products from Adafruit!
  137 00000056         ;
  138 00000056         ; Written by Limor Fried/Ladyada for Adafruit Industries
                       .
  139 00000056         ; MIT license, all text above must be included in any re
                       distribution
  140 00000056         ;****************************************************
  141 00000056         
  142 00000056 00 00           ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  143 00000058                 END                          ; end of file
              4000800C 
              400043FC 
              40008008 
Command Line: --debug --xref --cpu=Cortex-M4 --apcs=interwork --depend=.\lcd.d 
-o.\lcd.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\
Luminary --list=.\lcd.lst LCD.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 32 in file LCD.s
   Uses
      None
Comment: .text unused
busyC 00000000

Symbol: busyC
   Definitions
      At line 66 in file LCD.s
   Uses
      At line 71 in file LCD.s
Comment: busyC used once
busyC2 00000022

Symbol: busyC2
   Definitions
      At line 83 in file LCD.s
   Uses
      At line 88 in file LCD.s
Comment: busyC2 used once
busyD 00000032

Symbol: busyD
   Definitions
      At line 103 in file LCD.s
   Uses
      At line 108 in file LCD.s
Comment: busyD used once
writecommand 00000000

Symbol: writecommand
   Definitions
      At line 58 in file LCD.s
   Uses
      At line 29 in file LCD.s
Comment: writecommand used once
writedata 00000032

Symbol: writedata
   Definitions
      At line 97 in file LCD.s
   Uses
      At line 30 in file LCD.s
Comment: writedata used once
6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIO_PORTA_DATA_R 400043FC

Symbol: GPIO_PORTA_DATA_R
   Definitions
      At line 22 in file LCD.s
   Uses
      At line 73 in file LCD.s
      At line 77 in file LCD.s
      At line 110 in file LCD.s
      At line 114 in file LCD.s

SSI0_DR_R 40008008

Symbol: SSI0_DR_R
   Definitions
      At line 23 in file LCD.s
   Uses
      At line 80 in file LCD.s
      At line 117 in file LCD.s

SSI0_SR_R 4000800C

Symbol: SSI0_SR_R
   Definitions
      At line 24 in file LCD.s
   Uses
      At line 67 in file LCD.s
      At line 84 in file LCD.s
      At line 104 in file LCD.s

SSI_SR_BSY 00000010

Symbol: SSI_SR_BSY
   Definitions
      At line 26 in file LCD.s
   Uses
      None
Comment: SSI_SR_BSY unused
SSI_SR_RNE 00000004

Symbol: SSI_SR_RNE
   Definitions
      At line 25 in file LCD.s
   Uses
      None
Comment: SSI_SR_RNE unused
SSI_SR_TNF 00000002

Symbol: SSI_SR_TNF
   Definitions
      At line 27 in file LCD.s
   Uses
      None
Comment: SSI_SR_TNF unused
6 symbols
344 symbols in table
